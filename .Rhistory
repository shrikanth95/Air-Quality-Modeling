y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom",
legend.box = "horizontal")
plt2 <- ggplot(df.plot,
aes(x  = idx,
y = delCO,
color = VPH))+
geom_point(size = 2)+
xlab("Hour of day") +
# scale_color_manual(values=c("red", "black")) +
ylab("Change in CO (ppm)") +
labs(color = "Vehicle Count")+
theme(legend.position="Bottom")
plot_grid(plt1, plt2, nrow = 1)
master <- read.csv("ExperimentData/E18_vehicleInc/sim_parameters.csv", sep = ",")
correlation <- cor(master[,c("idx", "wd", "co", "ws","total")])
plot(master[,c("idx", "wd", "co", "ws","total")])
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
names(df.pf)[1] = "VPH"
names(df.pf)[2] = "ws"
names(df.pf)[3] = "pf"
df.pf$idx = master[1:nrow(df.pf), "idx"]
df.pf$time = as.POSIXct(master[1:nrow(df.pf), "time"])
df.pf$temp = master[1:nrow(df.pf), "temp"]
df.pf$co = master[1:nrow(df.pf), "co"]
df.pf$del = c(0, diff(df.pf$ws))
df.plot <- df.pf
df.plot <- df.plot[df.plot$time<as.POSIXct("2018-11-03 01:00:00"),]
df.plot$flag <- df.plot$ws!=0.5
plt1 <- ggplot(df.plot,
aes(x  = del,
y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom",
legend.box = "horizontal")
plt2 <- ggplot(df.plot,
aes(x  = idx,
y = delCO,
color = VPH))+
geom_point(size = 2)+
xlab("Hour of day") +
# scale_color_manual(values=c("red", "black")) +
ylab("Change in CO (ppm)") +
labs(color = "Vehicle Count")+
theme(legend.position="Bottom")
plot_grid(plt1, plt2, nrow = 1)
df.plot$flag <- df.plot$ws!=0.5
plt1 <- ggplot(df.plot,
aes(x  = del,
y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom",
legend.box = "horizontal")
plt2 <- ggplot(df.plot,
aes(x  = idx,
y = delCO,
color = VPH))+
geom_point(size = 2)+
xlab("Hour of day") +
# scale_color_manual(values=c("red", "black")) +
ylab("Change in CO (ppm)") +
labs(color = "Vehicle Count")+
theme(legend.position="Bottom")
plot_grid(plt1, plt2, nrow = 1)
plt2 <- ggplot(df.plot,
aes(x  = idx,
y = del,
color = VPH))+
geom_point(size = 2)+
xlab("Hour of day") +
# scale_color_manual(values=c("red", "black")) +
ylab("Change in CO (ppm)") +
labs(color = "Vehicle Count")+
theme(legend.position="Bottom")
plot_grid(plt1, plt2, nrow = 1)
testSet.df
testSet.df <- master[as.Date(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
write.csv(master, "ExperimentData/E18_vehicleInc/sim_parameters.csv", row.names = FALSE)
write.csv(master$wd,"ExperimentData/E18_vehicleInc/sim_parameters_wd.csv", row.names = FALSE)
write.csv(master$wd,"ExperimentData/E18_vehicleInc/sim_parameters_wd.csv", row.names = FALSE)
write.csv(master$ws,"ExperimentData/E18_vehicleInc/sim_parameters_ws.csv", row.names = FALSE)
write.csv(master$co,"ExperimentData/E18_vehicleInc/sim_parameters_co.csv", row.names = FALSE)
write.csv(master$total,"ExperimentData/E18_vehicleInc/sim_parameters_total.csv", row.names = FALSE)
write.csv(master$cef,"ExperimentData/E18_vehicleInc/sim_parameters_cef.csv", row.names = FALSE)
write.csv(master$temp,"ExperimentData/E18_vehicleInc/sim_parameters_temp.csv", row.names = FALSE)
write.csv(testSet.df,"ExperimentData/E18_vehicleInc/sim_test_parameters.csv", row.names = FALSE)
write.csv(testSet.df$wd,"ExperimentData/E18_vehicleInc/sim_test_parameters_wd.csv", row.names = FALSE)
write.csv(testSet.df$co,"ExperimentData/E18_vehicleInc/sim_test_parameters_co.csv", row.names = FALSE)
write.csv(testSet.df$cef,"ExperimentData/E18_vehicleInc/sim_test_parameters_cef.csv", row.names = FALSE)
write.csv(testSet.df$temp,"ExperimentData/E18_vehicleInc/sim_test_parameters_temp.csv", row.names = FALSE)
testSet.df
testSet.df <- master[master$time > as.POSIXct("2018-11-06 00:00:00"),]
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
write.csv(testSet.df,"ExperimentData/E18_vehicleInc/sim_test_parameters.csv", row.names = FALSE)
write.csv(testSet.df$wd,"ExperimentData/E18_vehicleInc/sim_test_parameters_wd.csv", row.names = FALSE)
write.csv(testSet.df$ws,"ExperimentData/E18_vehicleInc/sim_test_parameters_ws.csv", row.names = FALSE)
write.csv(testSet.df$co,"ExperimentData/E18_vehicleInc/sim_test_parameters_co.csv", row.names = FALSE)
write.csv(testSet.df$total,"ExperimentData/E18_vehicleInc/sim_test_parameters_total.csv", row.names = FALSE)
write.csv(testSet.df$cef,"ExperimentData/E18_vehicleInc/sim_test_parameters_cef.csv", row.names = FALSE)
write.csv(testSet.df$temp,"ExperimentData/E18_vehicleInc/sim_test_parameters_temp.csv", row.names = FALSE)
testSet.df
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
testSet.df
master
master <- merge(temp, vph.master[,c("time", "total", "cef")], by = "time")
master.temp <- master
ggplot(master) + geom_histogram(aes(x = idx))
master <- master[master$date!="2018-10-29", ]
master <- master[master$date!="2018-11-04", ]
master <- master[master$date!="2018-11-08", ]
master.temp <- master[as.Date(master$date) < as.Date("2018-11-05"),]
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
master <- master.temp
testSet.df
testSet.df <- testSet.df[as.POSIXct(testSet.df$time)<as.POSIXct("2018-11-07 00:00:00"),]
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
testSet.df <- testSet.df[as.POSIXct(testSet.df$time)<as.POSIXct("2018-11-07 00:00:00"),]
master <- master.temp
testSet.df
master <- merge(temp, vph.master[,c("time", "total", "cef")], by = "time")
master <- master[complete.cases(master),]
master.temp <- master
ggplot(master) + geom_histogram(aes(x = idx))
master <- master[master$date!="2018-10-29", ]
master <- master[master$time!="2018-10-30 00:00:00", ]
master <- master[master$date!="2018-11-04", ]
master <- master[master$date!="2018-11-08", ]
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
testSet.df <- testSet.df[as.POSIXct(testSet.df$time)<as.POSIXct("2018-11-07 00:00:00"),]
master <- master[as.Date(master$date) < as.Date("2018-11-05"),]
testSet.df
master <- merge(temp, vph.master[,c("time", "total", "cef")], by = "time")
master <- master[complete.cases(master),]
master.temp <- master
ggplot(master) + geom_histogram(aes(x = idx))
master <- master[master$date!="2018-10-29", ]
master <- master[master$time!="2018-10-30 00:00:00", ]
master <- master[master$date!="2018-11-04", ]
master <- master[master$date!="2018-11-08", ]
testSet.df <- master[as.POSIXct(master$time) > as.POSIXct("2018-11-06 00:00:00"),]
testSet.df <- testSet.df[as.POSIXct(testSet.df$time)<as.POSIXct("2018-11-07 01:00:00"),]
master <- master[as.Date(master$date) < as.Date("2018-11-05"),]
testSet.df
write.csv(testSet.df,"ExperimentData/E18_vehicleInc/sim_test_parameters.csv", row.names = FALSE)
write.csv(testSet.df$wd,"ExperimentData/E18_vehicleInc/sim_test_parameters_wd.csv", row.names = FALSE)
write.csv(testSet.df$ws,"ExperimentData/E18_vehicleInc/sim_test_parameters_ws.csv", row.names = FALSE)
write.csv(testSet.df$co,"ExperimentData/E18_vehicleInc/sim_test_parameters_co.csv", row.names = FALSE)
write.csv(testSet.df$total,"ExperimentData/E18_vehicleInc/sim_test_parameters_total.csv", row.names = FALSE)
write.csv(testSet.df$cef,"ExperimentData/E18_vehicleInc/sim_test_parameters_cef.csv", row.names = FALSE)
write.csv(testSet.df$temp,"ExperimentData/E18_vehicleInc/sim_test_parameters_temp.csv", row.names = FALSE)
cf.sea <- c()
for(i in 1:24){
cf.sea <- c(cf.sea, mean(df.plot[df.plot$idx == i,"pf"]))
}
cf.sea
write.csv(x = cf.sea, file = "ExperimentData/E20_pf_opt/pf_seasonal.csv", row.names = FALSE)
df.opt <- read.csv('ExperimentData/E20_pf_opt/testConcentrations.csv',header = FALSE)
df.opt
df.opt$time <- as.POSIXct(testSet.df$time)
names(df.opt)[1] <- "CALINE4"
df.opt$Measured <- testSet.df$co
df.opt
df.opt <- df.opt[, c(2, 1, 3)]
df.opt.m <- melt(df.opt, id.vars = "time")
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+geom_point(size = 2)
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+geom_point(size = 2)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+geom_point(aes(shape = variable),size = 2)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+geom_point(aes(shape = variable),size = 2)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source", shape = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+geom_point(aes(shape = variable),size = 4)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source", shape = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
setwd("B:/Work/Robert Bosch Center/Sensor data/Time Series/repo")
master
df.means <- colMeans(df.plot[,c("temp", "ws", "VPH", "pf")])
df.z$temp <- computeZscore(df.plot[,"temp"])
df.plot
df.z <- df.plot
df.z$ws <- computeZscore(df.plot[,"ws"])
df.z$ws <- computeZscore(df.plot[,"ws"])
df.z$VPH <- computeZscore(df.plot[,"VPH"])
df.z$pf <- computeZscore(df.plot[,"pf"])
ggplot(df.z[,c("time", "temp", "idx","pf", "VPH", "ws", "flag")],
aes(x = VPH,
y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
# xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom", legend.box = "horizontal")
ggplot(df.z[,c("time", "temp", "idx","pf", "VPH", "ws", "flag")],
aes(x = VPH,
y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
# xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom", legend.box = "horizontal")
write.csv(df.z,"ExperimentData/E20_pf_opt/sim_parameters_zscored.csv", row.names = FALSE)
df.z
cf.lm.raw <- lm(formula = pf~VPH+ws+idx+temp, data = df.z)
summary(cf.lm.raw)
testSet.df
predictions <- predict(cf.l.raw, testSet.df)
predictions <- predict(cf.lm.raw, testSet.df)
testSet.df
names(testSet.df)[8] <- VPH
names(testSet.df)[8] <- "VPH"
predictions <- predict(cf.lm.raw, testSet.df)
predictions
plot(predicitons)
plot(predictions)
testSet.df
predictions <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
predictions
testSet.df.z <- testSet.df
names(testSet.df)[8] <- "VPH"
testSet.df.z <- testSet.df
testSet.df.z$temp <- computeZscore(testSet.df[,"temp"])
testSet.df.z$VPH <- computeZscore(testSet.df[,"VPH"])
testSet.df.z$pf <- computeZscore(testSet.df[,"pf"])
testSet.df.z
cf.lm.raw <- lm(formula = pf~VPH+ws+idx+temp, data = df.z)
summary(cf.lm.raw)
predictions <- predict(cf.lm.raw, testSet.df.z[,c("VPH", "ws", "idx", "temp")])
plot(predictions)
summary(cf.lm.raw)
cf.lm.raw <- lm(formula = pf~VPH+ws+idx+temp, data = master)
master
names(master)[8] <- "VPH"
summary(cf.lm.raw)
cf.lm.raw <- lm(formula = pf~VPH+ws+temp, data = master)
master
testSet.df
cf.lm.raw <- lm(formula = pf~VPH+ws+temp, data = master)
master
master
cf.lm.raw <- lm(formula = pf~VPH+ws+temp, data = master)
master
df.opt
master <- read.csv("ExperimentData/E18_vehicleInc/sim_parameters.csv", sep = ",")
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
names(df.pf)[1] = "VPH"
names(df.pf)[2] = "ws"
df.pf$idx = master[1:nrow(df.pf), "idx"]
df.pf$time = as.POSIXct(master[1:nrow(df.pf), "time"])
df.pf$temp = master[1:nrow(df.pf), "temp"]
df.pf$co = master[1:nrow(df.pf), "co"]
df.pf$del = c(0, diff(df.pf$ws))
df.plot
master
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
df.pf
master <- read.csv("ExperimentData/E18_vehicleInc/sim_parameters.csv", sep = ",")
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
names(df.pf)[1] = "VPH"
names(df.pf)[2] = "ws"
names(df.pf)[3] = "pf"
df.pf$idx = master[, "idx"]
df.pf$time = as.POSIXct(master[, "time"])
df.pf$time = as.POSIXct(master[, "time"])
df.pf$temp = master[, "temp"]
df.pf$co = master[, "co"]
df.plot <- df.pf
df.pf
df.plot <- df.plot[df.plot$time<as.POSIXct("2018-11-03 01:00:00"),]
master <- master[master$time < as.POSIXct("2018-11-03 01:00:00"),]
master <- master[as.POSIXct(master$time) < as.POSIXct("2018-11-03 01:00:00"),]
write.csv(master, "ExperimentData/E18_vehicleInc/sim_parameters.csv", row.names = FALSE)
master <- read.csv("ExperimentData/E18_vehicleInc/sim_parameters.csv", sep = ",")
correlation <- cor(master[,c("idx", "wd", "co", "ws","total")])
plot(master[,c("idx", "wd", "co", "ws","total")])
plot(master[,c("idx", "wd", "co", "ws","total")])
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
names(df.pf)[1] = "VPH"
names(df.pf)[1] = "VPH"
names(df.pf)[2] = "ws"
names(df.pf)[3] = "pf"
df.pf$time = as.POSIXct(master[, "time"])
df.pf$temp = master[, "temp"]
df.pf <- read.csv(file = 'ExperimentData/E20_pf_opt/pf_corr_data.csv',sep = ",", header = FALSE)
df.pf <- df.pf[1:nrow(master), ]
names(df.pf)[1] = "VPH"
names(df.pf)[2] = "ws"
names(df.pf)[3] = "pf"
df.pf$idx = master[, "idx"]
df.pf$time = as.POSIXct(master[, "time"])
df.pf$temp = master[, "temp"]
df.pf$co = master[, "co"]
df.plot <- df.pf
df.plot
df.plot <- df.plot[df.plot$time<as.POSIXct("2018-11-03 01:00:00"),]
df.plot
df.plot$flag <- df.plot$ws!=0.5
plt1 <- ggplot(df.plot,
aes(x  = del,
y = pf,
color = flag,
shape = flag))+
geom_point(size = 2)+
xlab("Hour of day") +
scale_color_manual(values=c("red", "black")) +
ylab("Correction Factor") +
labs(color = "Wind speed correction", shape = "Wind speed correction") +
theme(legend.position="bottom",
legend.box = "horizontal")
plot_grid(plt1, plt2, nrow = 1)
df.plot
cf.lm.raw <- lm(formula = pf~VPH+ws+temp, data = df.plot)
summary(cf.lm.raw)
testSet.df
df.plot
predictions <- predict(test, testSet.df[,c("VPH", "ws", "idx", "temp")])
predictions <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
plot(predictions)
predictions
predictions
cfTrue <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv')
cfTrue
cfTrue <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
cfTrue
cfHat <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
cf.df <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
cf.df
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
cfHat <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
cf.df
names(cf.df)[1] <- "True CF"
cf.df$v2 <- cfHat
cf.df
names(cf.df)[2] <- "Estimated CF"
cf.df$time <- testSet.df
cf.df
cf.df$time <- testSet.df$time
cf.df <- cf.df[3,1,2]
cf.df
cf.df$time <- testSet.df$time
cfHat <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
names(cf.df)[1] <- "True CF"
cf.df$v2 <- cfHat
names(cf.df)[2] <- "Estimated CF"
cf.df$time <- testSet.df$time
cf.df <- cf.df[,c(3,1,2)]
cf.df
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, shape = variable))+geom_line()
plt1
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, shape = variable))+geom_line(size = 2)+geom_point(size = 4)
plt1
df.plot
cf.lm.clear <- lm(formula = pf~VPH+ws+temp, data = df.plot[flag = TRUE])
cf.lm.clear <- lm(formula = pf~VPH+ws+temp, data = df.plot[flag = TRUE,])
cf.lm.clear <- lm(formula = pf~VPH+ws+temp, data = df.plot[flag = "TRUE",])
df.plot.clean = df.plot[flag = TRUE,]
df.plot
df.plot.clean = df.plot[,flag = TRUE]
cf.lm.clear <- lm(formula = pf~VPH+ws+temp, data = df.plot[df.plot$flag==TRUE,])
summary(cf.lm.clear)
df.plot
df.plot$wsTrue = master$ws
cf.lm.raw <- lm(formula = pf~VPH+wsTrue+temp, data = df.plot)
summary(cf.lm.raw)
cfHat <- predict(cf.lm.raw, testSet.df[,c("VPH", "ws", "idx", "temp")])
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
names(cf.df)[1] <- "True CF"
testSet.df$wsTrue = testSet.df$ws
cfHat <- predict(cf.lm.raw, testSet.df[,c("VPH", "wsTrue", "idx", "temp")])
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
names(cf.df)[1] <- "True CF"
cf.df$v2 <- cfHat
names(cf.df)[2] <- "Estimated CF"
cf.df$time <- testSet.df$time
cf.df <- cf.df[,c(3,1,2)]
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, shape = variable))+geom_line(size = 2)+geom_point(size = 4)
plt1
write.csv(cfHat,"ExperimentData/E20_pf_opt/pf_hat.csv", row.names = FALSE)
df.opt$time <- as.POSIXct(testSet.df$time)
names(df.opt)[1] <- "CALINE4"
df.opt$Measured <- testSet.df$co
df.opt <- df.opt[, c(2, 1, 3)]
df.opt.m <- melt(df.opt, id.vars = "time")
df.opt
df.opt <- read.csv('ExperimentData/E20_pf_opt/testConcentrations_hat.csv',header = FALSE)
df.opt$time <- as.POSIXct(testSet.df$time)
df.opt
names(df.opt)[1] <- "CALINE4"
df.opt
df.opt$Measured <- testSet.df$co
df.opt
df.opt <- df.opt[, c(2, 1, 3)]
df.opt
df.opt.m <- melt(df.opt, id.vars = "time")
df.opt.m
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
theme_grey(base_size = 20)+scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, shape = variable))+geom_line(size = 2)+geom_point(size = 4) + scale_color_manual(values=c("red", "black"))
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, linetype = variable))+geom_line(size = 1.5) + scale_color_manual(values=c("red", "black"))
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, linetype = variable))+geom_line(size = 1.5) + scale_color_manual(values=c("red", "black")) + ylab("Correction Factor")
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, linetype = variable))+geom_line(size = 1.5) + scale_color_manual(values=c("black", "red")) + ylab("Correction Factor")
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plot_grid(plt1, plt2, nrow = 2)
df.opt <- df.opt[, c(2, 3, 1)]
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plot_grid(plt1, plt2, nrow = 2)
cf.df <- read.csv('ExperimentData/E20_pf_opt/pf_testSet.csv', header = FALSE)
names(cf.df)[1] <- "True CF"
cf.df$v2 <- cfHat
names(cf.df)[2] <- "Estimated CF"
cf.df$time <- testSet.df$time
cf.df <- cf.df[,c(3,2,1)]
plt1 <- ggplot(melt(cf.df,id.vars = "time"), aes(x = time, y = value, color= variable, linetype = variable))+geom_line(size = 1.5) + scale_color_manual(values=c("black", "red")) + ylab("Correction Factor")
df.opt <- read.csv('ExperimentData/E20_pf_opt/testConcentrations_hat.csv',header = FALSE)
df.opt$time <- as.POSIXct(testSet.df$time)
names(df.opt)[1] <- "CALINE4"
df.opt$Measured <- testSet.df$co
df.opt <- df.opt[, c(2, 3, 1)]
df.opt.m <- melt(df.opt, id.vars = "time")
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plot_grid(plt1, plt2, nrow = 2)
cf.df
df.opt
df.opt <- read.csv('ExperimentData/E20_pf_opt/testConcentrations_hat.csv',header = FALSE)
df.opt$time <- as.POSIXct(testSet.df$time)
names(df.opt)[1] <- "CALINE4"
df.opt$Measured <- testSet.df$co
df.opt <- df.opt[, c(2, 1, 3)]
df.opt.m <- melt(df.opt, id.vars = "time")
plt2<-ggplot(df.opt.m, aes(x = time, y= value, color = variable, linetype = variable))+
geom_line(size = 1.5)+
xlab("Time")+ylab('Concentrations(ppm)') +
labs(color = "Source", linetype = "Source") +
scale_color_manual(values=c("red", "black"))
plot_grid(plt1, plt2, nrow = 2)
plot_grid(plt1, plt2, nrow = 2)
summary(cf.lm.raw)
